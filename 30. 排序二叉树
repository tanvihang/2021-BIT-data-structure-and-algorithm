成绩	10	开启时间	2021年11月11日 星期四 16:15
折扣	0.8	折扣时间	2021年11月28日 星期日 17:30
允许迟交	否	关闭时间	2021年11月28日 星期日 17:30
排序二叉树是指左子树的所有节点的值均小于它根节点的值，右子树的所有节点的值均大于它根节点的值。

输入：输入有一行，表示若干个要排序的数，输入0时停止

输出：
二叉树的凹入表示
和二叉树的中序遍历序列

sample：
input:
56 78 34 89 12 35 67 77 22 57 0

output:
        12
            22
    34
        35
56
            57
        67
            77
    78
        89

12 22 34 35 56 57 67 77 78 89



#include "stdio.h"
#include "stdlib.h"

int data[1024][2],depth; //data to store data and depth... Depth for printing the tab bar

//struct for da binary tree
struct Node
{
	int num;
	Node *left, *right;
};


void compare(int n, Node *p)
{
	depth++;
	if(n < p->num) //left tree
	{
		if(!p->left)
		{
			p->left=(Node *)malloc(sizeof(Node));
			p->left->left=p->left->right=NULL;
			p->left->num=n;
			return;
		}
		else
			compare(n,p->left);
	}
	else //right tree
	{
		if(!p->right)
		{
			p->right=(Node *)malloc(sizeof(Node));
			p->right->left=p->right->right=NULL;
			p->right->num=n;
			return;
		}
		else
			compare(n,p->right);
	}
}

void swap(int i, int j)
{
	int tmp = data[i][0];
	data[i][0]=data[j][0];
	data[j][0]=tmp;
	
	tmp = data[i][1];
	data[i][1]=data[j][1];
	data[j][1]=tmp;
}

void qsort(int begin, int end)
{
	int i,j;
	if(begin<end)
	{
		i=begin+1;
		j=end;
		
		while(i<j)
		{
			if(data[i][0]<data[begin][0])
			{
				swap(i,j);
				j--;
			}
			else
			{
				i++;
			}
		}
		if(data[i][0]<=data[begin][0])
			{i--;}
			
		swap(begin,i);
		qsort(begin, i);
		qsort(j,end);
	}
}

int main()
{
	int i=1, j, n;
	Node *root = (Node *)malloc(sizeof(Node));
	Node *p;
	scanf("%d",&n);
	//initialize first number, not yet sorting
	root->num=n;
	root->left=root->right=NULL;
	data[0][0]=n;
	
	while(1)
	{
		scanf("%d",&n);
		if(n==0)
			break;
		data[i][0]=n;
		depth=0;
		compare(n,root);
		data[i++][1]=depth;
	}
	qsort(0,--i);
	n=i;
	while(i>=0)
	{
		for(j=0;j<data[i][1];j++)
			{printf("    ");}
		printf("%d\n",data[i--][0]);
	}
	printf("\n");
	while(n>=0)
		printf(" %d",data[n--][0]);
	printf("\n");
	return 0;
}
